{"version":3,"file":"static/js/33.8f525b87.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n`;\n","import PropTypes from 'prop-types';\nimport { LoaderContainer } from './Loader.styled';\n\nexport const Loader = ({ children }) => {\n  return <LoaderContainer>{children}</LoaderContainer>;\n};\n\nLoader.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n\nexport const BackLink = styled(Link)`\n  display: block;\n  width: 100px;\n  text-align: center;\n  margin: 15px;\n  padding: 5px 15px 5px 15px;\n  border: 1px solid grey;\n  border-radius: 5px;\n  text-decoration: none;\n  color: black;\n  &:hover {\n    background-color: #fce38a;\n    font-weight: 500;\n  }\n`;\n\nexport const LinkInfo = styled(Link)`\n  display: block;\n  width: 100px;\n  text-align: center;\n  border: 1px solid grey;\n  border-radius: 5px;\n  text-decoration: none;\n  color: black;\n  padding: 5px 35px 5px 35px;\n  &:hover {\n    background-color: #fce38a;\n    font-weight: 500;\n  }\n  @media screen and (min-width: 768px) {\n    margin: 15px;\n  }\n`;\n\nexport const List = styled.ul`\n  list-style-type: none;\n  display: flex;\n  justify-content: space-around;\n  padding-left: 0;\n  @media screen and (min-width: 768px) {\n    justify-content: flex-start;\n  }\n`;\n\nexport const Img = styled.img`\n  border-radius: 5px;\n  width: 350px;\n  @media screen and (min-width: 768px) {\n    min-width: 300px;\n  }\n`;\n\nexport const ImgWrp = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const InfoWrp = styled.div`\n  padding-left: 15px;\n`;\n\nexport const AdditionalWrp = styled.div`\n  padding-left: 15px;\n  padding-right: 15px;\n  @media screen and (min-width: 768px) {\n    padding-left: 0;\n  }\n`;\n","import { useRef, useEffect, useState } from 'react';\nimport { fetchMovie } from '../../services/apiService';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { ColorRing } from 'react-loader-spinner';\nimport { Loader } from '../../components/Loader/Loader';\n\nimport {\n  MovieContainer,\n  BackLink,\n  LinkInfo,\n  List,\n  Img,\n  ImgWrp,\n  InfoWrp,\n  AdditionalWrp,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n\n  //Виконуємо запит при кожній зміні movieId\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        const data = await fetchMovie(movieId);\n        setMovie(data);\n      } catch (error) {\n        console.log('Error', error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  //Лінк на картинку-заглушку фільму\n  const defaultMovieImg =\n    'https://mishanonoo.com/cdn/shopifycloud/shopify/assets/no-image-2048-5e88c1b20e087fb7bbe9a3771824e743c244f437e4f8ba93bbf7b11b53f7824c_500x750_crop_center.gif';\n\n  return (\n    <>\n      {isLoading && (\n        <Loader>\n          <ColorRing\n            visible={true}\n            height=\"180\"\n            width=\"180\"\n            ariaLabel=\"blocks-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"blocks-wrapper\"\n            colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n          />\n        </Loader>\n      )}\n      <BackLink to={backLinkLocationRef.current}> ↩ Go back</BackLink>\n      <MovieContainer>\n        <ImgWrp>\n          <Img\n            src={\n              movie.poster_path\n                ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                : defaultMovieImg\n            }\n            alt={movie.title}\n          />\n        </ImgWrp>\n\n        <InfoWrp>\n          <h1>{movie.title}</h1>\n          <p>\n            User scores: <b>{Math.round(movie.vote_average * 10)}%</b>\n          </p>\n          <h2>Overview</h2>\n          <p>{movie.overview}</p>\n          <h2>Genres</h2>\n          <p>{movie.genres?.map(({ name }) => name).join(', ')}</p>\n        </InfoWrp>\n      </MovieContainer>\n      <AdditionalWrp>\n        <h3>Additional information</h3>\n        <List>\n          <li>\n            <LinkInfo to=\"cast\">Cast</LinkInfo>\n          </li>\n          <li>\n            <LinkInfo to=\"reviews\">Reviews</LinkInfo>\n          </li>\n        </List>\n        <Outlet />\n      </AdditionalWrp>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["LoaderContainer","styled","_templateObject","_taggedTemplateLiteral","Loader","_ref","children","_jsx","MovieContainer","BackLink","Link","_templateObject2","LinkInfo","_templateObject3","List","_templateObject4","Img","_templateObject5","ImgWrp","_templateObject6","InfoWrp","_templateObject7","AdditionalWrp","_templateObject8","_location$state$from","_location$state","_movie$genres","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","isLoading","setIsLoading","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","fetchMovie","sent","t0","console","log","message","finish","stop","apply","arguments","_jsxs","_Fragment","ColorRing","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","to","current","src","poster_path","concat","alt","title","Math","round","vote_average","overview","genres","map","_ref2","name","join","Outlet"],"sourceRoot":""}